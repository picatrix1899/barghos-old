//	public Point3f[] getPoints()
//	{	
//		double x, y, z, xy;                              // vertex position
//
//		double sectorStep = 2 * Maths.PI / (this.subdivides * 2);
//		double stackStep = Maths.PI / (this.subdivides);
//		double sectorAngle, stackAngle;
//
//		Point3f[] p = new Point3f[(this.subdivides + 1) * (this.subdivides * 2)];
//		
//		for(int i = 0; i <= this.subdivides; ++i)
//		{
//		    stackAngle = Maths.PI / 2 - i * stackStep;        // starting from pi/2 to -pi/2
//		    xy = radius * Math.cos(stackAngle);             // r * cos(u)
//		    z = radius * Math.sin(stackAngle);              // r * sin(u)
//
//		    
//		    for(int j = 0; j < this.subdivides * 2; ++j)
//		    {
//		        sectorAngle = j * sectorStep;           // starting from 0 to 2pi
//
//		        // vertex position (x, y, z)
//		        x = xy * Math.cos(sectorAngle);             // r * cos(u) * cos(v)
//		        y = xy * Math.sin(sectorAngle);             // r * cos(u) * sin(v)
//		        p[i * this.subdivides + j] = new Point3f(x, y, z);
//		    }
//		}
//		
//		return p;
//	}